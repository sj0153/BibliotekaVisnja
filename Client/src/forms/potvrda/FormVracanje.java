/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms.potvrda;

import domain.Potvrda;
import java.util.List;
import controller.ClientController;
import domain.StavkaPotvrde;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Stefan
 */
public class FormVracanje extends javax.swing.JDialog {

    /**
     * Creates new form FrmVracanje
     */
    private SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    private final Potvrda potvrda;

    public FormVracanje(JDialog parent, boolean modal, Potvrda potvrda) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.potvrda = potvrda;
        pripremiFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDatumIzdavanja = new javax.swing.JLabel();
        btnSacuvaj = new javax.swing.JButton();
        txtDatumIzdavanja = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtRokZaVracanje = new javax.swing.JTextField();
        lblZaposleni = new javax.swing.JLabel();
        txtZaposleni = new javax.swing.JTextField();
        lblClan = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        txtClan = new javax.swing.JTextField();
        lblIDP = new javax.swing.JLabel();
        lblDatumVracanja = new javax.swing.JLabel();
        txtDatumVracanja = new javax.swing.JTextField();
        txtIDP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za vraćanje knjiga");
        setResizable(false);

        lblDatumIzdavanja.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDatumIzdavanja.setText("Datum izdavanja:");

        btnSacuvaj.setText("SAČUVAJ");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        txtDatumIzdavanja.setEditable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Rok za vraćanje:");

        txtRokZaVracanje.setEditable(false);

        lblZaposleni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblZaposleni.setText("Zaposleni:");

        txtZaposleni.setEditable(false);

        lblClan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClan.setText("Član:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "RB", "Knjiga", "Napomena"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStavke);
        if (tblStavke.getColumnModel().getColumnCount() > 0) {
            tblStavke.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtClan.setEditable(false);

        lblIDP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIDP.setText("IDP:");

        lblDatumVracanja.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDatumVracanja.setText("Datum vracanja (yyyy-mm-dd)");

        txtIDP.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblClan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblZaposleni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblDatumIzdavanja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumIzdavanja)
                                    .addComponent(txtRokZaVracanje)
                                    .addComponent(txtZaposleni)
                                    .addComponent(txtClan)
                                    .addComponent(txtIDP))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 92, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSacuvaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDatumVracanja)
                                .addGap(31, 31, 31)
                                .addComponent(txtDatumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(101, 101, 101))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIDP)
                    .addComponent(txtIDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZaposleni)
                    .addComponent(txtZaposleni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClan)
                    .addComponent(txtClan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumIzdavanja)
                    .addComponent(txtDatumIzdavanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRokZaVracanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatumVracanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            validacijaDatumaVracanja();
            Date datumVracanja = format.parse(txtDatumVracanja.getText());
            Date rokZaVracanje = format.parse(txtRokZaVracanje.getText());
            String poruka = "";
            if (datumVracanja.after(rokZaVracanje)) {
                poruka += "\nKnjige nisu vracene na vreme!";
            }
            potvrda.setDatumVracanja(format.parse(txtDatumVracanja.getText().trim()));
            ClientController.getInstance().azurirajPotvrdu(potvrda);
            JOptionPane.showMessageDialog(this, "Sistem je ažurirao podatke o potvrdi o izdavanju." + poruka, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne može da ažurira podatke o potvrdi o izdavanju.\n" + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClan;
    private javax.swing.JLabel lblDatumIzdavanja;
    private javax.swing.JLabel lblDatumVracanja;
    private javax.swing.JLabel lblIDP;
    private javax.swing.JLabel lblZaposleni;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtClan;
    private javax.swing.JTextField txtDatumIzdavanja;
    private javax.swing.JTextField txtDatumVracanja;
    private javax.swing.JTextField txtIDP;
    private javax.swing.JTextField txtRokZaVracanje;
    private javax.swing.JTextField txtZaposleni;
    // End of variables declaration//GEN-END:variables

    private void pripremiFormu() {
        TableColumn tc = tblStavke.getColumnModel().getColumn(0);
        tc.setMaxWidth(20);
        Date date = new Date();
        date.getTime();
        txtDatumVracanja.setText(format.format(date));
        popuniTabelu(potvrda.getStavke());
        txtIDP.setText(potvrda.getIDP());
        txtDatumIzdavanja.setText(format.format(potvrda.getDatumIzdavanja()));
        txtRokZaVracanje.setText(format.format(potvrda.getRokZaVracanje()));
        txtClan.setText(potvrda.getClan().toString());
        txtZaposleni.setText(potvrda.getZaposleni().toString());
    }

    private void popuniTabelu(List<StavkaPotvrde> stavke) {
        DefaultTableModel tbm = (DefaultTableModel) tblStavke.getModel();
        for (int i = 0; i < tblStavke.getRowCount();) {
            tbm.removeRow(0);
        }
        for (StavkaPotvrde stavkaPotvrde : stavke) {
            String napomena = "";
            if (stavkaPotvrde.getNapomena() != null && !stavkaPotvrde.getNapomena().equals("null")) {
                napomena = stavkaPotvrde.getNapomena();
            }
            Object row[] = new Object[]{stavkaPotvrde.getRBStavke(), stavkaPotvrde.getKnjiga(), napomena};
            tbm.addRow(row);
        }
    }

    public void validacijaDatumaVracanja() throws Exception {
        String poruka = "";
        String dv = txtDatumVracanja.getText().trim();
        String ymd[] = dv.split("-");
        if (ymd.length != 3) {
            poruka += "Datum mora biti unet u formatu: yyyy-dd-mm !\n";
        } else {
            try {
                int y = Integer.parseInt(ymd[0]);
                int m = Integer.parseInt(ymd[1]);
                int d = Integer.parseInt(ymd[2]);
                if (m < 1 || m > 12) {
                    poruka += "Mesec mora biti u intervalu 1-12.\n";
                }
                if (d < 1 || d > 31) {
                    poruka += "Dan u mesecu mora biti u intervalu 1-31.\n";
                }
                switch (m) {
                    case 2:
                        if (!(((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) && m == 2 && d > 28) {
                            poruka += "Godina " + y + ". nije prestupna. Februar ima 28 dana.\n";
                        } else if ((((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) && m == 2 && d > 29) {
                            poruka += "U prestupnoj godini februar ima 29 dana.\n";
                        }
                        break;
                    case 4:
                        if (d > 30) {
                            poruka += "April ima 30 dana.\n";
                        }
                        break;
                    case 6:
                        if (d > 30) {
                            poruka += "Jun ima 30 dana.\n";
                        }
                        break;
                    case 9:
                        if (d > 30) {
                            poruka += "Septembar ima 30 dana.\n";
                        }
                        break;
                    case 11:
                        if (d > 30) {
                            poruka += "Novembar ima 30 dana.\n";
                        }
                        break;
                }
                Date datumVracanja = format.parse(dv);
                Date datumIzdavanja = format.parse(txtDatumIzdavanja.getText());
                Date danas = new Date();
                danas.getTime();
                if (datumVracanja.before(datumIzdavanja)) {
                    poruka += "Datum vracanja ne moze biti pre datuma izdavanja potvrde.\n";
                }
                if (datumVracanja.after(danas)) {
                    poruka += "Datum vracanja ne moze biti nakon danasnjeg datuma.\n";
                }
            } catch (Exception e) {
                poruka += "Pogresno ste uneli datum";
            }
        }
        if (!poruka.equals("")) {
            throw new Exception(poruka);
        }
    }
}
